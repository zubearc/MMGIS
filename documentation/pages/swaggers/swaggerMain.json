{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "MMGIS API",
    "description": "",
    "license": {
      "name": "",
      "url": ""
    }
  },
  "host": "localhost:8888",
  "basePath": "/api",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/test": {
      "post": {
        "description": "",
        "parameters": [
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Hello World!"
          }
        }
      }
    },
    "/login": {
      "post": {
        "description": "Log in to MMGIS",
        "parameters": [
          {
            "name": "master",
            "in": "body",
            "description": "Whether to use the master database instead of the mission relative one. (default: false)",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mission",
            "in": "body",
            "description": "Mission name",
            "required": true,
            "type": "string"
          },
          {
            "name": "username",
            "in": "body",
            "description": "Username",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "body",
            "description": "Password",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User is logged in."
          }
        }
      }
    },
    "/signup": {
      "post": {
        "description": "Sign up for MMGIS",
        "parameters": [
          {
            "name": "master",
            "in": "body",
            "description": "Whether to use the master database instead of the mission relative one. (default: false)",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "mission",
            "in": "body",
            "description": "Mission name",
            "required": true,
            "type": "string"
          },
          {
            "name": "username",
            "in": "body",
            "description": "Username",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "body",
            "description": "Email address",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "body",
            "description": "Password",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User signed up and logged in."
          }
        }
      }
    },
    "/logout": {
      "post": {
        "description": "Log out of MMGIS",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully logged out of MMGIS."
          }
        }
      }
    },
    "/utils/getprofile": {
      "post": {
        "description": "Returns an array of evenly spaced values between two points from a tif",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/getprofile"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/utils/getpoint": {
      "post": {
        "description": "Returns the value at a location on a tif",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/getpoint"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/utils/getbands": {
      "post": {
        "description": "Returns an array of bands and values at a location. [[band1, value1], [band2, value2],...]",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/getbands"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/draw/write_to_polygon_geojson": {
      "post": {
        "description": "Writes, edits and deletes user features",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/write_to_polygon_geojson"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/files/getfiledata": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/getfiledata"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/files/getalluserswithfiles": {
      "post": {
        "description": "Returns all public user files as well as all of the current user's",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/getalluserswithfiles"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/files/getproperties": {
      "post": {
        "description": "Get the properties of a file.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/getproperties"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/files/saveproperties": {
      "post": {
        "description": "Set the properties of a file.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/saveproperties"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/files/createfile": {
      "post": {
        "description": "Creates a new file",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createfile"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/files/deletefile": {
      "post": {
        "description": "Deletes a file",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/deletefile"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    }
  },
  "definitions": {
    "demtilesets": {
      "required": [
        "dems/thisdem/{z}/{x}/{y}.png"
      ],
      "properties": {
        "dems/thisdem/{z}/{x}/{y}.png": {
          "type": "object",
          "description": "The key is the path to the dem tileset",
          "$ref": "#/definitions/demtilesetsinside"
        }
      }
    },
    "getprofile": {
      "required": [
        "path",
        "lat1",
        "lon1",
        "lat2",
        "lon2",
        "steps",
        "axes"
      ],
      "properties": {
        "path": {
          "type": "string",
          "description": "Path to .tif image"
        },
        "lat1": {
          "type": "number",
          "description": ""
        },
        "lon1": {
          "type": "number",
          "description": ""
        },
        "lat2": {
          "type": "number",
          "description": ""
        },
        "lon2": {
          "type": "number",
          "description": ""
        },
        "steps": {
          "type": "number",
          "description": "How many steps or datapoints to capture."
        },
        "axes": {
          "type": "string",
          "description": "If 'XYZ', expects an at least 3 banded image and returns an array of [[band1,band2,band3],...]. Otherwise it just uses 1 band: [[stepLat, stepLon, band1],...]."
        }
      }
    },
    "getpoint": {
      "required": [
        "path",
        "lat",
        "lon"
      ],
      "properties": {
        "path": {
          "type": "string",
          "description": "Path to .tif image"
        },
        "lat": {
          "type": "number",
          "description": ""
        },
        "lon": {
          "type": "number",
          "description": ""
        }
      }
    },
    "getbands": {
      "required": [
        "path",
        "x",
        "y",
        "xyorll",
        "bands"
      ],
      "properties": {
        "path": {
          "type": "string",
          "description": "Path to .tif image"
        },
        "x": {
          "type": "number",
          "description": "x or lon"
        },
        "y": {
          "type": "number",
          "description": "y or lat"
        },
        "xyorll": {
          "type": "string",
          "description": "'xy' or 'll' (In ll, x is the lat value and y is the lon value)"
        },
        "bands": {
          "type": "string",
          "description": "Examples: '[[1,<bands>]]' to query though 1 to <band> bands. '[[1,4],[7,10]]'"
        }
      }
    },
    "getalluserswithfiles": {
      "required": [
        "username"
      ],
      "properties": {
        "username": {
          "type": "string"
        },
        "mission": {
          "type": "string",
          "description": "If unset, uses master"
        }
      }
    },
    "write_to_polygon_geojson": {
      "required": [
        "rawfilename",
        "mode",
        "featuretodelete",
        "feature",
        "replacing",
        "replacer",
        "movingTo",
        "moving"
      ],
      "properties": {
        "rawfilename": {
          "type": "string"
        },
        "mode": {
          "type": "string",
          "description": "'adddel', 'replace' or 'move'"
        },
        "featuretodelete": {
          "type": "string",
          "description": "Required for mode 'adddel'"
        },
        "feature": {
          "type": "string",
          "description": "Required for mode 'adddel'"
        },
        "replacing": {
          "type": "string",
          "description": "Feature to replace. Required for mode 'replace'"
        },
        "replacer": {
          "type": "string",
          "description": "Feature to replace replacing with. Required for mode 'replace'"
        },
        "movingTo": {
          "type": "string",
          "description": "'front' or 'back'. Required for mode 'move'"
        },
        "moving": {
          "type": "string",
          "description": "Feature to move. Required for mode 'move'"
        },
        "mission": {
          "type": "string",
          "description": "If unset, uses master"
        }
      }
    },
    "getfiledata": {
      "required": [
        "filename"
      ],
      "properties": {
        "filename": {
          "type": "string"
        },
        "mission": {
          "type": "string",
          "description": "If unset, uses master"
        }
      }
    },
    "getproperties": {
      "required": [
        "filename"
      ],
      "properties": {
        "filename": {
          "type": "string"
        },
        "mission": {
          "type": "string",
          "description": "If unset, uses master"
        }
      }
    },
    "saveproperties": {
      "required": [
        "filename",
        "name",
        "description",
        "public"
      ],
      "properties": {
        "filename": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "public": {
          "type": "integer",
          "description": "0 for private and 1 for publicly viewable."
        },
        "mission": {
          "type": "string",
          "description": "If unset, uses master"
        }
      }
    },
    "createfile": {
      "required": [
        "username",
        "name"
      ],
      "properties": {
        "username": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "filedata": {
          "type": "string",
          "description": "Data to populate the new file with"
        },
        "mission": {
          "type": "string",
          "description": "If unset, uses master"
        }
      }
    },
    "deletefile": {
      "required": [
        "filename"
      ],
      "properties": {
        "filename": {
          "type": "string"
        },
        "mission": {
          "type": "string",
          "description": "If unset, uses master"
        }
      }
    }
  }
}
